<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. Industics Co., Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.industics.ilab.okr.dal.dao.mapper.UserMapper">
    <select id="queryUsers" resultType="com.industics.ilab.okr.apiobjects.user.UserVO">
        SELECT *
        FROM t_ilab_user
        WHERE t_ilab_user.is_deleted = 0
        <if test="fullname!=null and fullname!=''">
            AND t_ilab_user.fullname LIKE CONCAT('%', #{fullname}, '%' )
        </if>
        <if test="mobile!=null and mobile!=''">
            AND t_ilab_user.mobile LIKE CONCAT('%', #{mobile}, '%' )
        </if>
    </select>

    <select id="getUserOkrOrgName" resultType="com.industics.ilab.okr.dal.entity.Group">
        SELECT *
        FROM t_ilab_user_group tiug
        LEFT JOIN t_ilab_group ON t_ilab_group.id = tiug.group_id AND t_ilab_group.is_deleted = 0
        WHERE
        tiug.user_id = #{userId}
        AND t_ilab_group.type = 'OKR'
        LIMIT 1
    </select>

    <select id="adminLogin" resultType="int">
        SELECT count(*)
        FROM admin where username=#{username} or password=#{password}
    </select>

    <insert id="addAdmin">
        insert into admin (admin_id, name, username, password, permission, create_time, update_time,last_login)
        VALUES (MD5(UUID()),#{name},#{username},#{password},#{permission},now(),now(),now());
    </insert>

    <delete id="deleteAdmin">
        delete from admin where admin_id=#{admin_id}
    </delete>


    <update id="updateAdmin">
        update admin set name=#{name},username=#{username},permission=#{permission},
                         update_time=now() where admin_id=#{admin_id}
    </update>

    <update id="updateAdminPassword">
        update admin set password=#{password},update_time=now() where admin_id=#{admin_id}
    </update>

    <update id="updateLastLogin">
        update admin set last_login=now() where admin_id=#{admin_id}
    </update>

    <select id="getAdminByUsername" resultType="Map">
        select * from admin where username=#{username}
    </select>

    <select id="getUserByEmail" resultType="Map">
        select * from user_bl where email=#{email}
    </select>

    <select id="getUserByID" resultType="Map">
        select * from user_bl where user_id=#{user_id}
    </select>


    <select id="getAdminByID" resultType="Map">
        select * from admin where admin_id=#{admin_id}
    </select>

    <select id="getAdmins" resultType="Map">
        select * from admin
    </select>

    <select id="getUsers" resultType="Map">
        select * from user_bl where status in
        <foreach collection="status" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        order by create_time DESC
        limit #{start},#{end}
    </select>

    <select id="getUsersCount" resultType="int">
        select count(*) from user_bl where status in
        <foreach collection="status" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <update id="updateUserStatus">
        update user_bl set status=#{status} where user_id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <insert id="addRegister">
        insert into register (email, code, create_time) VALUES (#{email},#{code},now())
    </insert>

    <insert id="addUserBL">
        insert into user_bl (user_id, work_num, name,avatar, email, password, phone, we_chat, status, create_time, last_login, update_time)
        VALUES (#{user_id},#{work_num},#{name},#{avatar},#{email},
                '{PKCS5S2}P7EvyZSgXa/RLTi+W2jQYI6HFmGiSAd7xCfE8s2NXXyZj+mlP8favaipn4MSPD17',
                #{phone},#{we_chat},'未激活',now(),now(),now());
    </insert>

    <update id="updateRegister">
        update register set code=#{code},create_time=now() where email=#{email}
    </update>

    <select id="getRegisterByEmail" resultType="Map">
        select *,REPLACE(unix_timestamp(now())-unix_timestamp(create_time),'.','') dateDifference
        from register where email=#{email}
    </select>

    <update id="updateUser">
        update user_bl set name=#{name},work_num=#{work_num},we_chat=#{we_chat} where user_id=#{user_id};
    </update>

    <update id="updateWorkNum">
        update applicant set work_num=#{work_num} where work_num=(select work_num from user_bl where user_id=#{user_id});
    </update>

    <update id="updateAvatar">
        update user_bl set avatar=#{avatar} where user_id=#{user_id};
    </update>

    <select id="getUserByWorkNum" resultType="Map">
        select * from user_bl where work_num=#{work_num}
    </select>
</mapper>
