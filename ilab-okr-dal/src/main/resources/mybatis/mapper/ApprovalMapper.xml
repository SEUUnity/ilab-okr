<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. Industics Co., Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.industics.ilab.okr.dal.dao.mapper.ApprovalMapper">
    <update id="updateApproval">
        update bonus_approval set status=#{status},update_time=now()
        <choose>
            <when test="status==0">
                ,pass_time=null,over_time=null
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="status==1">
                ,pass_time=now(),over_time=null
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="status==2">
                ,over_time=now()
            </when>
            <otherwise>
            </otherwise>
        </choose>
        <choose>
            <when test="status==-1">
                ,pass_time=now(),over_time=null
            </when>
            <otherwise>
            </otherwise>
        </choose>
        where approval_id=#{approval_id}
    </update>

    <select id="getApprovalByID" resultType="Map">
        select * from bonus_approval where approval_id=#{approval_id}
    </select>

    <select id="getApprovalByStatus" resultType="Map">
        select approval_id,(select work_num from user_bl where bonus_approval.user_id=user_bl.user_id) workNum,
               (select name from user_bl where bonus_approval.user_id=user_bl.user_id) userName,applicant_id,
               (select position_name from position where position.position_id=(select position_id from applicant where applicant.applicant_id=bonus_approval.applicant_id)) positionName,
               (select bonus_type from position where position.position_id=(select position_id from applicant where applicant.applicant_id=bonus_approval.applicant_id)) bonusType,
               status,update_time
        from bonus_approval where status in
        <foreach collection="status" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
         order by update_time DESC
            limit #{start},#{end}
    </select>
    
    <select id="getInfoByApprovalId" resultType="Map">
        select amount,bonus_type from bonus where bonus_type=
        (select bonus_type from position where position_id=
        (select position_id from applicant where applicant_id=
        (select applicant_id from bonus_approval where approval_id=#{approval_id})))
    </select>

    <select id="getApprovalByStatusCount" resultType="int">
        select count(*) from bonus_approval where status in
        <foreach collection="status" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getApproval" resultType="Map">
        select (select work_num from user_bl where bonus_approval.user_id=user_bl.user_id) workNum,
               (select name from user_bl where bonus_approval.user_id=user_bl.user_id) userName,applicant_id,
               (select position_name from position where position.position_id=(select position_id from applicant where applicant.applicant_id=bonus_approval.applicant_id)) positionName,
               (select bonus_type from position where position.position_id=(select position_id from applicant where applicant.applicant_id=bonus_approval.applicant_id)) bonusType,
               status,update_time
        from bonus_approval order by update_time DESC
            limit #{start},#{end}
    </select>

    <select id="getApprovalCount" resultType="int">
        select count(*) from bonus_approval
    </select>

    <select id="ranking" resultType="Map">
        select user_bl.work_num,user_bl.user_id,user_bl.name,sum(amount) sumMoney,user_bl.avatar from grant_bonus,bonus_approval,user_bl
        where grant_bonus.approval_id=bonus_approval.approval_id and bonus_approval.user_id=user_bl.user_id
        <choose>
            <when test="style==1">
                and unix_timestamp(now())-unix_timestamp(grant_time) &lt;30*24*60*60
            </when>
            <otherwise>
            </otherwise>
        </choose>
        group by user_bl.user_id  order by sumMoney desc,user_id limit 0,20
    </select>

    <select id="myRanking" resultType="Map">
        select user_bl.user_id,user_bl.work_num,sum(amount) sumMoney from grant_bonus,bonus_approval,user_bl
        where grant_bonus.approval_id=bonus_approval.approval_id and bonus_approval.user_id=user_bl.user_id
        <choose>
            <when test="style==1">
                and unix_timestamp(now())-unix_timestamp(grant_time) &lt;30*24*60*60
            </when>
            <otherwise>
            </otherwise>
        </choose>
        group by user_bl.user_id  order by sumMoney desc,user_id
    </select>

    <select id="getApprovalByBL" resultType="Map">
        select *,(select name from applicant where bonus_approval.applicant_id=applicant.applicant_id) applicant_name,
               (select position_name from position where position_id=
              (select position_id from applicant where bonus_approval.applicant_id=applicant.applicant_id)) position_name
        from bonus_approval where user_id=#{user_id}
    </select>

    <select id="getApprovalByApplicant" resultType="Map">
        select * from bonus_approval where applicant_id=#{applicant_id}
    </select>

    <insert id="addApproval">
        insert into bonus_approval (approval_id, user_id, status, start_time, applicant_id, update_time)
        VALUES (MD5(UUID()),#{user_id},0,now(),#{applicant_id},now());
    </insert>
</mapper>
